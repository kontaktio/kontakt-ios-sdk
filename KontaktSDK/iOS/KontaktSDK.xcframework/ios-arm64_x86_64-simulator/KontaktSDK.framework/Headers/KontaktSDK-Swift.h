#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef KONTAKTSDK_SWIFT_H
#define KONTAKTSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#import <KontaktSDK/KontaktSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KontaktSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
/// Single accelerometer sample
SWIFT_CLASS_NAMED("AccelerationSample")
@interface KTKAccelerationSample : NSObject
/// Acceleration value on the X-axis (in G)
@property (nonatomic, readonly) double xg;
/// Acceleration value on the Y-axis (in G)
@property (nonatomic, readonly) double yg;
/// Acceleration value on the Z-axis (in G)
@property (nonatomic, readonly) double zg;
/// Calculated timestamp of the sample
/// note:
/// This value is not available in Accident Frame
@property (nonatomic, readonly) NSTimeInterval timestamp;
- (nonnull instancetype)initWithXg:(double)xg yg:(double)yg zg:(double)zg timestamp:(NSTimeInterval)timestamp OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum SensitivityLevel : uint8_t;
SWIFT_CLASS_NAMED("AccidentFrame")
@interface KTKAccidentFrame : NSObject
/// Battery level percentage
@property (nonatomic, readonly) NSInteger batteryLevel;
/// Sensitivility level in mg/unit
@property (nonatomic, readonly) enum SensitivityLevel sensitivityLevel;
/// <code>true</code> if any event crossed the 0.5g threshold
@property (nonatomic, readonly) BOOL alertMode;
/// Accident detected in the last 5 minutes
@property (nonatomic, readonly) BOOL accidentDetected;
/// Counter with the number of events detected
@property (nonatomic, readonly) NSInteger accidentCounter;
/// Acceleration data
@property (nonatomic, readonly, strong) KTKAccelerationSample * _Nonnull accelerationData;
/// Maximum of the moving average of the acceleration during the last event
@property (nonatomic, readonly) double maxMovingAverage;
- (nonnull instancetype)initWithBatteryLevel:(NSInteger)batteryLevel sensitivityLevel:(enum SensitivityLevel)sensitivityLevel alertMode:(BOOL)alertMode accidentDetected:(BOOL)accidentDetected accidentCounter:(NSInteger)accidentCounter accelerationData:(KTKAccelerationSample * _Nonnull)accelerationData maxMovingAverage:(double)maxMovingAverage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(uint8_t, SensitivityLevel, open) {
  SensitivityLevelMg16PerUnit = 0b00,
  SensitivityLevelMg32PerUnit = 0b01,
  SensitivityLevelMg64PerUnit = 0b10,
  SensitivityLevelMg128PerUnit = 0b11,
};

@class KTKNearbyDevice;
@class KTKDeviceGATTOperation;
@class NSOperation;
SWIFT_CLASS_NAMED("DeviceAccidentReadDataOperation")
@interface KTKDeviceAccidentReadDataOperation : KTKDeviceConnectionOperation
@property (nonatomic, copy) void (^ _Nullable handler)(KTKAccidentFrame * _Nonnull, BOOL * _Nonnull);
@property (nonatomic, strong) KTKNearbyDevice * _Nullable device;
- (void)createOperations;
- (void)operationDidFinish:(KTKDeviceGATTOperation * _Nonnull)operation errors:(NSArray<NSError *> * _Nullable)errors;
- (void)finished:(NSArray<NSError *> * _Nullable)errors;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent serial:(BOOL)serial OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_PROTOCOL_NAMED("DeviceProlongableOperation")
@protocol KTKDeviceProlongableOperation
/// An operation to be scheduled on the connection queue to prolong connection with the device.
- (KTKDeviceGATTOperation * _Nonnull)makeProlongOperation SWIFT_WARN_UNUSED_RESULT;
@end

@interface KTKDeviceAccidentReadDataOperation (SWIFT_EXTENSION(KontaktSDK)) <KTKDeviceProlongableOperation>
- (KTKDeviceGATTOperation * _Nonnull)makeProlongOperation SWIFT_WARN_UNUSED_RESULT;
@end

@class DeviceCCRequest;
@class NSData;
@class DeviceCCStorageReadRequest;
@class DeviceCCGenericResponse;
@class DeviceCCLogEvent;
@class DeviceCCSlotStateResponse;
@class DeviceCCStorageReadResponse;
SWIFT_CLASS("_TtC10KontaktSDK17DeviceCCDataCoder")
@interface DeviceCCDataCoder : NSObject
+ (NSData * _Nullable)encodeWithRequest:(DeviceCCRequest * _Nonnull)request error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)encodeWithStorageReadRequest:(DeviceCCStorageReadRequest * _Nonnull)request error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCGenericResponse * _Nullable)decodeGenericResponse:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCLogEvent * _Nullable)decodeLogsEvent:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCSlotStateResponse * _Nullable)decodeSlotStateResponse:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCStorageReadResponse * _Nullable)decodeStorageDataReadResponse:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC10KontaktSDK23DeviceCCGenericResponse")
@interface DeviceCCGenericResponse : NSObject
@property (nonatomic, readonly) uint16_t requestId;
@property (nonatomic, readonly) uint64_t timestampMilliseconds;
@property (nonatomic, readonly) int32_t returnCode;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end

enum LogLevel : uint8_t;
SWIFT_CLASS("_TtC10KontaktSDK16DeviceCCLogEvent")
@interface DeviceCCLogEvent : NSObject
@property (nonatomic, readonly) uint64_t timestampMicroseconds;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum LogLevel level;
@property (nonatomic, readonly, copy) NSString * _Nonnull levelDescription;
@end

typedef SWIFT_ENUM(uint8_t, LogLevel, open) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelNotice = 2,
  LogLevelWarning = 3,
  LogLevelError = 4,
};

SWIFT_CLASS("_TtC10KontaktSDK15DeviceCCRequest")
@interface DeviceCCRequest : NSObject
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId requestId:(uint16_t)requestId levelId:(uint8_t)levelId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId requestId:(uint16_t)requestId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId levelId:(uint8_t)levelId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Slots;
SWIFT_CLASS("_TtC10KontaktSDK25DeviceCCSlotStateResponse")
@interface DeviceCCSlotStateResponse : NSObject
@property (nonatomic, readonly) uint16_t requestId;
@property (nonatomic, readonly) uint64_t timestampMilliseconds;
@property (nonatomic, readonly) int32_t returnCode;
@property (nonatomic, readonly, strong) Slots * _Nonnull slots;
@end

@class SlotState;
SWIFT_CLASS("_TtCC10KontaktSDK25DeviceCCSlotStateResponse5Slots")
@interface Slots : NSObject
@property (nonatomic, readonly, strong) SlotState * _Nullable one;
@property (nonatomic, readonly, strong) SlotState * _Nullable two;
@end

@interface DeviceCCSlotStateResponse (SWIFT_EXTENSION(KontaktSDK))
@end

enum SlotDetection : NSInteger;
@class NSNumber;
SWIFT_CLASS("_TtCC10KontaktSDK25DeviceCCSlotStateResponse9SlotState")
@interface SlotState : NSObject
@property (nonatomic, readonly) enum SlotDetection detection;
@property (nonatomic, readonly) KTKSensorStateError error;
@property (nonatomic, readonly, strong) NSNumber * _Nullable value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SlotDetection, open) {
  SlotDetectionEmpty = 0,
  SlotDetectionDigital = 1,
  SlotDetectionAnalog = 2,
};

@class ElementFormat;
@class ElementData;
SWIFT_CLASS("_TtC10KontaktSDK25DeviceCCStorageDataParser")
@interface DeviceCCStorageDataParser : NSObject
+ (NSArray<NSArray<ElementData *> *> * _Nullable)parseRawData:(NSData * _Nonnull)rawData dataFormat:(NSArray<ElementFormat *> * _Nonnull)dataFormat error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC10KontaktSDK26DeviceCCStorageReadRequest")
@interface DeviceCCStorageReadRequest : NSObject
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId requestId:(uint16_t)requestId readFrom:(uint64_t)readFrom readTo:(uint64_t)readTo token:(NSInteger)token maxSize:(NSInteger)maxSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId readFrom:(uint64_t)readFrom readTo:(uint64_t)readTo;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId readFrom:(uint64_t)readFrom readTo:(uint64_t)readTo token:(NSInteger)token;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC10KontaktSDK27DeviceCCStorageReadResponse")
@interface DeviceCCStorageReadResponse : NSObject
@property (nonatomic, readonly) uint16_t requestId;
@property (nonatomic, readonly, copy) NSData * _Nullable rawData;
@property (nonatomic, readonly) int32_t returnCode;
@property (nonatomic, readonly) uint64_t readFrom;
@property (nonatomic, readonly) uint64_t readTo;
@property (nonatomic, readonly) uint64_t dataReadTo;
@property (nonatomic, readonly) NSInteger token;
@property (nonatomic, readonly, copy) NSArray<ElementFormat *> * _Nullable dataFormat;
@property (nonatomic, readonly, copy) NSData * _Nullable rawDataFormat;
@property (nonatomic, readonly) BOOL isFinalResponse;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@interface DeviceCCStorageReadResponse (SWIFT_EXTENSION(KontaktSDK))
@end

enum ElementId : NSInteger;
enum EncodingId : NSInteger;
SWIFT_CLASS("_TtCC10KontaktSDK27DeviceCCStorageReadResponse13ElementFormat")
@interface ElementFormat : NSObject
@property (nonatomic, readonly) enum ElementId elementId;
@property (nonatomic, readonly) enum EncodingId encodingId;
@property (nonatomic, readonly, copy) NSData * _Nonnull rawDataFormat;
- (nonnull instancetype)initWithElementId:(enum ElementId)elementId encodingId:(enum EncodingId)encodingId rawDataFormat:(NSData * _Nonnull)rawDataFormat OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithElementIdRaw:(NSInteger)elementIdRaw encodingIdRaw:(NSInteger)encodingIdRaw rawDataFormat:(NSData * _Nonnull)rawDataFormat;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ElementId, open) {
  ElementIdInvalid = -1,
  ElementIdTimestamp = 0,
  ElementIdTemperatureSensor0 = 1,
  ElementIdTemperatureSensor1 = 2,
  ElementIdTemperatureSensor2 = 3,
  ElementIdHumidity0 = 4,
  ElementIdPressure = 5,
  ElementIdDoorSensor = 6,
  ElementIdSensorOobAlarms = 9,
  ElementIdSensorErrAlarms = 10,
  ElementIdErrors = 11,
  ElementIdChecksum = 12,
  ElementIdMonitorState = 13,
};

typedef SWIFT_ENUM(NSInteger, EncodingId, open) {
  EncodingIdInvalid = -1,
  EncodingIdU32 = 0,
  EncodingIdU16 = 1,
  EncodingIdU8 = 2,
  EncodingIdQ9_7 = 3,
};

SWIFT_CLASS("_TtCC10KontaktSDK27DeviceCCStorageReadResponse11ElementData")
@interface ElementData : NSObject
@property (nonatomic, readonly, strong) ElementFormat * _Nonnull format;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("DeviceSensorReadDataOperation")
@interface KTKDeviceSensorReadDataOperation : KTKDeviceConnectionOperation
@property (nonatomic, copy) void (^ _Nullable handler)(NSArray<KTKAccelerationSample *> * _Nonnull, BOOL * _Nonnull);
@property (nonatomic, strong) KTKNearbyDevice * _Nullable device;
- (void)createOperations;
- (void)operationDidFinish:(KTKDeviceGATTOperation * _Nonnull)operation errors:(NSArray<NSError *> * _Nullable)errors;
- (void)finished:(NSArray<NSError *> * _Nullable)errors;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent serial:(BOOL)serial OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@interface KTKDeviceSensorReadDataOperation (SWIFT_EXTENSION(KontaktSDK)) <KTKDeviceProlongableOperation>
- (KTKDeviceGATTOperation * _Nonnull)makeProlongOperation SWIFT_WARN_UNUSED_RESULT;
@end

@class NSCoder;
@class NSDate;
SWIFT_CLASS("_TtC10KontaktSDK32ISO8601MicrosecondsDateFormatter")
@interface ISO8601MicrosecondsDateFormatter : NSDateFormatter
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (NSString * _Nonnull)stringFromDate:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
@end

@class KTKTelemetryEventPacket;
@interface KTKCloudClient (SWIFT_EXTENSION(KontaktSDK))
- (void)collectTelemetry:(KTKTelemetryEventPacket * _Nonnull)packet;
@end

SWIFT_CLASS("_TtC10KontaktSDK17KTKTelemetryEvent")
@interface KTKTelemetryEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceAddress;
@property (nonatomic, readonly) NSInteger rssi;
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
- (nonnull instancetype)initWithDeviceAddress:(NSString * _Nonnull)deviceAddress rssi:(NSInteger)rssi data:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC10KontaktSDK23KTKTelemetryEventPacket")
@interface KTKTelemetryEventPacket : NSObject
@property (nonatomic, readonly) NSInteger version;
@property (nonatomic, readonly, copy) NSString * _Nonnull sourceId;
@property (nonatomic, readonly, copy) NSString * _Nonnull sourceType;
@property (nonatomic, readonly, copy) NSArray<KTKTelemetryEvent *> * _Nonnull events;
- (nonnull instancetype)initWithVersion:(NSInteger)version sourceId:(NSString * _Nonnull)sourceId sourceType:(NSString * _Nonnull)sourceType events:(NSArray<KTKTelemetryEvent *> * _Nonnull)events OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, MonitorState, open) {
  MonitorStateInvalid = -1,
  MonitorStateSleep = 0,
  MonitorStatePaused = 1,
  MonitorStateArming = 2,
  MonitorStateArmed = 3,
  MonitorStateHalted = 4,
};

enum VersionOperator : NSInteger;
@interface NSString (SWIFT_EXTENSION(KontaktSDK))
- (BOOL)compareVersion:(NSString * _Nonnull)otherVersion operator:(enum VersionOperator)operator_ SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, VersionOperator, open) {
  VersionOperatorGreaterThan = 0,
  VersionOperatorLessThan = 1,
  VersionOperatorGreaterThanOrEqualTo = 2,
  VersionOperatorLessThanOrEqualTo = 3,
  VersionOperatorEqualTo = 4,
  VersionOperatorNotEqualTo = 5,
};

typedef SWIFT_ENUM(NSInteger, SensorErrAlarm, open) {
  SensorErrAlarmInvalid = -1,
  SensorErrAlarmInactive = 0x0,
  SensorErrAlarmActive = 0x1,
  SensorErrAlarmAcked = 0x2,
  SensorErrAlarmResolved = 0x3,
};

typedef SWIFT_ENUM(NSInteger, SensorError, open) {
  SensorErrorInvalid = -1,
  SensorErrorNoError = 0x0,
  SensorErrorNoMeasurementOrBusError = 0x1,
  SensorErrorProbeDisconnected = 0x2,
  SensorErrorOther = 0x3,
};

typedef SWIFT_ENUM(NSInteger, SensorOobAlarm, open) {
  SensorOobAlarmInvalid = -1,
  SensorOobAlarmInactive = 0x0,
  SensorOobAlarmActive = 0x1,
  SensorOobAlarmAcked = 0x2,
  SensorOobAlarmResolved = 0x3,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef KONTAKTSDK_SWIFT_H
#define KONTAKTSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#import <KontaktSDK/KontaktSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KontaktSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
/// Single accelerometer sample
SWIFT_CLASS_NAMED("AccelerationSample")
@interface KTKAccelerationSample : NSObject
/// Acceleration value on the X-axis (in G)
@property (nonatomic, readonly) double xg;
/// Acceleration value on the Y-axis (in G)
@property (nonatomic, readonly) double yg;
/// Acceleration value on the Z-axis (in G)
@property (nonatomic, readonly) double zg;
/// Calculated timestamp of the sample
/// note:
/// This value is not available in Accident Frame
@property (nonatomic, readonly) NSTimeInterval timestamp;
- (nonnull instancetype)initWithXg:(double)xg yg:(double)yg zg:(double)zg timestamp:(NSTimeInterval)timestamp OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum SensitivityLevel : uint8_t;
SWIFT_CLASS_NAMED("AccidentFrame")
@interface KTKAccidentFrame : NSObject
/// Battery level percentage
@property (nonatomic, readonly) NSInteger batteryLevel;
/// Sensitivility level in mg/unit
@property (nonatomic, readonly) enum SensitivityLevel sensitivityLevel;
/// <code>true</code> if any event crossed the 0.5g threshold
@property (nonatomic, readonly) BOOL alertMode;
/// Accident detected in the last 5 minutes
@property (nonatomic, readonly) BOOL accidentDetected;
/// Counter with the number of events detected
@property (nonatomic, readonly) NSInteger accidentCounter;
/// Acceleration data
@property (nonatomic, readonly, strong) KTKAccelerationSample * _Nonnull accelerationData;
/// Maximum of the moving average of the acceleration during the last event
@property (nonatomic, readonly) double maxMovingAverage;
- (nonnull instancetype)initWithBatteryLevel:(NSInteger)batteryLevel sensitivityLevel:(enum SensitivityLevel)sensitivityLevel alertMode:(BOOL)alertMode accidentDetected:(BOOL)accidentDetected accidentCounter:(NSInteger)accidentCounter accelerationData:(KTKAccelerationSample * _Nonnull)accelerationData maxMovingAverage:(double)maxMovingAverage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(uint8_t, SensitivityLevel, open) {
  SensitivityLevelMg16PerUnit = 0b00,
  SensitivityLevelMg32PerUnit = 0b01,
  SensitivityLevelMg64PerUnit = 0b10,
  SensitivityLevelMg128PerUnit = 0b11,
};

@class KTKNearbyDevice;
@class KTKDeviceGATTOperation;
@class NSOperation;
SWIFT_CLASS_NAMED("DeviceAccidentReadDataOperation")
@interface KTKDeviceAccidentReadDataOperation : KTKDeviceConnectionOperation
@property (nonatomic, copy) void (^ _Nullable handler)(KTKAccidentFrame * _Nonnull, BOOL * _Nonnull);
@property (nonatomic, strong) KTKNearbyDevice * _Nullable device;
- (void)createOperations;
- (void)operationDidFinish:(KTKDeviceGATTOperation * _Nonnull)operation errors:(NSArray<NSError *> * _Nullable)errors;
- (void)finished:(NSArray<NSError *> * _Nullable)errors;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent serial:(BOOL)serial OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_PROTOCOL_NAMED("DeviceProlongableOperation")
@protocol KTKDeviceProlongableOperation
/// An operation to be scheduled on the connection queue to prolong connection with the device.
- (KTKDeviceGATTOperation * _Nonnull)makeProlongOperation SWIFT_WARN_UNUSED_RESULT;
@end

@interface KTKDeviceAccidentReadDataOperation (SWIFT_EXTENSION(KontaktSDK)) <KTKDeviceProlongableOperation>
- (KTKDeviceGATTOperation * _Nonnull)makeProlongOperation SWIFT_WARN_UNUSED_RESULT;
@end

@class DeviceCCRequest;
@class NSData;
@class DeviceCCStorageReadRequest;
@class DeviceCCGenericResponse;
@class DeviceCCLogEvent;
@class DeviceCCSlotStateResponse;
@class DeviceCCStorageReadResponse;
SWIFT_CLASS("_TtC10KontaktSDK17DeviceCCDataCoder")
@interface DeviceCCDataCoder : NSObject
+ (NSData * _Nullable)encodeWithRequest:(DeviceCCRequest * _Nonnull)request error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)encodeWithStorageReadRequest:(DeviceCCStorageReadRequest * _Nonnull)request error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCGenericResponse * _Nullable)decodeGenericResponse:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCLogEvent * _Nullable)decodeLogsEvent:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCSlotStateResponse * _Nullable)decodeSlotStateResponse:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (DeviceCCStorageReadResponse * _Nullable)decodeStorageDataReadResponse:(NSData * _Nonnull)responseData error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC10KontaktSDK23DeviceCCGenericResponse")
@interface DeviceCCGenericResponse : NSObject
@property (nonatomic, readonly) uint16_t requestId;
@property (nonatomic, readonly) uint64_t timestampMilliseconds;
@property (nonatomic, readonly) int32_t returnCode;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@end

enum LogLevel : uint8_t;
SWIFT_CLASS("_TtC10KontaktSDK16DeviceCCLogEvent")
@interface DeviceCCLogEvent : NSObject
@property (nonatomic, readonly) uint64_t timestampMicroseconds;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum LogLevel level;
@property (nonatomic, readonly, copy) NSString * _Nonnull levelDescription;
@end

typedef SWIFT_ENUM(uint8_t, LogLevel, open) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelNotice = 2,
  LogLevelWarning = 3,
  LogLevelError = 4,
};

SWIFT_CLASS("_TtC10KontaktSDK15DeviceCCRequest")
@interface DeviceCCRequest : NSObject
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId requestId:(uint16_t)requestId levelId:(uint8_t)levelId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId requestId:(uint16_t)requestId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId levelId:(uint8_t)levelId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Slots;
SWIFT_CLASS("_TtC10KontaktSDK25DeviceCCSlotStateResponse")
@interface DeviceCCSlotStateResponse : NSObject
@property (nonatomic, readonly) uint16_t requestId;
@property (nonatomic, readonly) uint64_t timestampMilliseconds;
@property (nonatomic, readonly) int32_t returnCode;
@property (nonatomic, readonly, strong) Slots * _Nonnull slots;
@end

@class SlotState;
SWIFT_CLASS("_TtCC10KontaktSDK25DeviceCCSlotStateResponse5Slots")
@interface Slots : NSObject
@property (nonatomic, readonly, strong) SlotState * _Nullable one;
@property (nonatomic, readonly, strong) SlotState * _Nullable two;
@end

@interface DeviceCCSlotStateResponse (SWIFT_EXTENSION(KontaktSDK))
@end

enum SlotDetection : NSInteger;
@class NSNumber;
SWIFT_CLASS("_TtCC10KontaktSDK25DeviceCCSlotStateResponse9SlotState")
@interface SlotState : NSObject
@property (nonatomic, readonly) enum SlotDetection detection;
@property (nonatomic, readonly) KTKSensorStateError error;
@property (nonatomic, readonly, strong) NSNumber * _Nullable value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SlotDetection, open) {
  SlotDetectionEmpty = 0,
  SlotDetectionDigital = 1,
  SlotDetectionAnalog = 2,
};

@class ElementFormat;
@class ElementData;
SWIFT_CLASS("_TtC10KontaktSDK25DeviceCCStorageDataParser")
@interface DeviceCCStorageDataParser : NSObject
+ (NSArray<NSArray<ElementData *> *> * _Nullable)parseRawData:(NSData * _Nonnull)rawData dataFormat:(NSArray<ElementFormat *> * _Nonnull)dataFormat error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC10KontaktSDK26DeviceCCStorageReadRequest")
@interface DeviceCCStorageReadRequest : NSObject
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId requestId:(uint16_t)requestId readFrom:(uint64_t)readFrom readTo:(uint64_t)readTo token:(NSInteger)token maxSize:(NSInteger)maxSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId readFrom:(uint64_t)readFrom readTo:(uint64_t)readTo;
- (nonnull instancetype)initWithMessageId:(uint16_t)messageId readFrom:(uint64_t)readFrom readTo:(uint64_t)readTo token:(NSInteger)token;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC10KontaktSDK27DeviceCCStorageReadResponse")
@interface DeviceCCStorageReadResponse : NSObject
@property (nonatomic, readonly) uint16_t requestId;
@property (nonatomic, readonly, copy) NSData * _Nullable rawData;
@property (nonatomic, readonly) int32_t returnCode;
@property (nonatomic, readonly) uint64_t readFrom;
@property (nonatomic, readonly) uint64_t readTo;
@property (nonatomic, readonly) uint64_t dataReadTo;
@property (nonatomic, readonly) NSInteger token;
@property (nonatomic, readonly, copy) NSArray<ElementFormat *> * _Nullable dataFormat;
@property (nonatomic, readonly, copy) NSData * _Nullable rawDataFormat;
@property (nonatomic, readonly) BOOL isFinalResponse;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@interface DeviceCCStorageReadResponse (SWIFT_EXTENSION(KontaktSDK))
@end

enum ElementId : NSInteger;
enum EncodingId : NSInteger;
SWIFT_CLASS("_TtCC10KontaktSDK27DeviceCCStorageReadResponse13ElementFormat")
@interface ElementFormat : NSObject
@property (nonatomic, readonly) enum ElementId elementId;
@property (nonatomic, readonly) enum EncodingId encodingId;
@property (nonatomic, readonly, copy) NSData * _Nonnull rawDataFormat;
- (nonnull instancetype)initWithElementId:(enum ElementId)elementId encodingId:(enum EncodingId)encodingId rawDataFormat:(NSData * _Nonnull)rawDataFormat OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithElementIdRaw:(NSInteger)elementIdRaw encodingIdRaw:(NSInteger)encodingIdRaw rawDataFormat:(NSData * _Nonnull)rawDataFormat;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ElementId, open) {
  ElementIdInvalid = -1,
  ElementIdTimestamp = 0,
  ElementIdTemperatureSensor0 = 1,
  ElementIdTemperatureSensor1 = 2,
  ElementIdTemperatureSensor2 = 3,
  ElementIdHumidity0 = 4,
  ElementIdPressure = 5,
  ElementIdDoorSensor = 6,
  ElementIdSensorOobAlarms = 9,
  ElementIdSensorErrAlarms = 10,
  ElementIdErrors = 11,
  ElementIdChecksum = 12,
  ElementIdMonitorState = 13,
};

typedef SWIFT_ENUM(NSInteger, EncodingId, open) {
  EncodingIdInvalid = -1,
  EncodingIdU32 = 0,
  EncodingIdU16 = 1,
  EncodingIdU8 = 2,
  EncodingIdQ9_7 = 3,
};

SWIFT_CLASS("_TtCC10KontaktSDK27DeviceCCStorageReadResponse11ElementData")
@interface ElementData : NSObject
@property (nonatomic, readonly, strong) ElementFormat * _Nonnull format;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("DeviceSensorReadDataOperation")
@interface KTKDeviceSensorReadDataOperation : KTKDeviceConnectionOperation
@property (nonatomic, copy) void (^ _Nullable handler)(NSArray<KTKAccelerationSample *> * _Nonnull, BOOL * _Nonnull);
@property (nonatomic, strong) KTKNearbyDevice * _Nullable device;
- (void)createOperations;
- (void)operationDidFinish:(KTKDeviceGATTOperation * _Nonnull)operation errors:(NSArray<NSError *> * _Nullable)errors;
- (void)finished:(NSArray<NSError *> * _Nullable)errors;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOperations:(NSArray<NSOperation *> * _Nullable)operations maxConcurrent:(NSUInteger)maxConcurrent serial:(BOOL)serial OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@interface KTKDeviceSensorReadDataOperation (SWIFT_EXTENSION(KontaktSDK)) <KTKDeviceProlongableOperation>
- (KTKDeviceGATTOperation * _Nonnull)makeProlongOperation SWIFT_WARN_UNUSED_RESULT;
@end

@class NSCoder;
@class NSDate;
SWIFT_CLASS("_TtC10KontaktSDK32ISO8601MicrosecondsDateFormatter")
@interface ISO8601MicrosecondsDateFormatter : NSDateFormatter
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (NSString * _Nonnull)stringFromDate:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
@end

@class KTKTelemetryEventPacket;
@interface KTKCloudClient (SWIFT_EXTENSION(KontaktSDK))
- (void)collectTelemetry:(KTKTelemetryEventPacket * _Nonnull)packet;
@end

SWIFT_CLASS("_TtC10KontaktSDK17KTKTelemetryEvent")
@interface KTKTelemetryEvent : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceAddress;
@property (nonatomic, readonly) NSInteger rssi;
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
- (nonnull instancetype)initWithDeviceAddress:(NSString * _Nonnull)deviceAddress rssi:(NSInteger)rssi data:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC10KontaktSDK23KTKTelemetryEventPacket")
@interface KTKTelemetryEventPacket : NSObject
@property (nonatomic, readonly) NSInteger version;
@property (nonatomic, readonly, copy) NSString * _Nonnull sourceId;
@property (nonatomic, readonly, copy) NSString * _Nonnull sourceType;
@property (nonatomic, readonly, copy) NSArray<KTKTelemetryEvent *> * _Nonnull events;
- (nonnull instancetype)initWithVersion:(NSInteger)version sourceId:(NSString * _Nonnull)sourceId sourceType:(NSString * _Nonnull)sourceType events:(NSArray<KTKTelemetryEvent *> * _Nonnull)events OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, MonitorState, open) {
  MonitorStateInvalid = -1,
  MonitorStateSleep = 0,
  MonitorStatePaused = 1,
  MonitorStateArming = 2,
  MonitorStateArmed = 3,
  MonitorStateHalted = 4,
};

enum VersionOperator : NSInteger;
@interface NSString (SWIFT_EXTENSION(KontaktSDK))
- (BOOL)compareVersion:(NSString * _Nonnull)otherVersion operator:(enum VersionOperator)operator_ SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, VersionOperator, open) {
  VersionOperatorGreaterThan = 0,
  VersionOperatorLessThan = 1,
  VersionOperatorGreaterThanOrEqualTo = 2,
  VersionOperatorLessThanOrEqualTo = 3,
  VersionOperatorEqualTo = 4,
  VersionOperatorNotEqualTo = 5,
};

typedef SWIFT_ENUM(NSInteger, SensorErrAlarm, open) {
  SensorErrAlarmInvalid = -1,
  SensorErrAlarmInactive = 0x0,
  SensorErrAlarmActive = 0x1,
  SensorErrAlarmAcked = 0x2,
  SensorErrAlarmResolved = 0x3,
};

typedef SWIFT_ENUM(NSInteger, SensorError, open) {
  SensorErrorInvalid = -1,
  SensorErrorNoError = 0x0,
  SensorErrorNoMeasurementOrBusError = 0x1,
  SensorErrorProbeDisconnected = 0x2,
  SensorErrorOther = 0x3,
};

typedef SWIFT_ENUM(NSInteger, SensorOobAlarm, open) {
  SensorOobAlarmInvalid = -1,
  SensorOobAlarmInactive = 0x0,
  SensorOobAlarmActive = 0x1,
  SensorOobAlarmAcked = 0x2,
  SensorOobAlarmResolved = 0x3,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
